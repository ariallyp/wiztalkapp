<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012-2014, Yunnan Yuan Xin technology Co., Ltd. All rights 
	reserved. -->

<!-- Description: 控制器层 Spring 配置。 Version: 1.0.0.1, Sep 14, 2015 Author: 
	Liang Ding -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<description>Spring-web MVC配置</description>

	<!-- 对所有Controller类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.yuanxin.app.app.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:annotation-config />

	<mvc:annotation-driven />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/*.properties</value>
				<value>classpath:env.properties</value>
			</list>
		</property>
	</bean>


	<!-- 当请求应用程序首页时，将执行/hello请求，还可以设定成redirect -->
	<mvc:view-controller path="/" view-name="forward:/pc/hello" />

	<mvc:annotation-driven validator="validator" />

	<!-- 定义静态资源 -->
	<mvc:resources location="/static/" mapping="/static/**" />

	<!-- 定义 Web 拦截器 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/pc/**" /> 
		<bean class="com.yuanxin.framework.tenant.TenantSessionInterceptor" > <property 
		name="pattern" value="(.*login.*)|(.*error.*)|(.*static.*)|(.*common.*)"/> 
		<property name="redirectURL" value="${baseComponentPath}"/> </bean> </mvc:interceptor> 
		</mvc:interceptors> -->

	<!-- freemarker视图解析器 -->
	<bean id="viewResolver"
		class="com.yuanxin.framework.web.resolver.CustomizeMultiViewResolver">
		<property name="order" value="1" />
		<property name="cache" value="true" />
		<property name="prefix" value="/" />
		<!-- 模板后缀，指定ftl页面为模板 -->
		<property name="suffix" value=".ftl" />
		<!-- 使用这个模板类来解析视图 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="exposeSpringMacroHelpers" value="false" />
		<!-- 允许访问请求属性，默认为false -->
		<property name="exposeRequestAttributes" value="true" />
		<!-- 允许访问会话属性，默认为false -->
		<property name="exposeSessionAttributes" value="true" />
		<property name="allowRequestOverride" value="true" />
		<!-- 允许使用 @SessionAttributes 特性 -->
		<property name="allowSessionOverride" value="true" />
		<!-- 页面上下文，类似于request.contextPath -->
		<property name="requestContextAttribute" value="rcc" />
		<!-- 模板输出内容编码，此处应与defaultEncoding保持一致 -->
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>

	<bean id="factory"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/component*.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<mvc:default-servlet-handler/>
	
	<!-- freemarker 视图解析器配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 模板文件所在目录 -->
		<property name="templateLoaderPath" value="${templateLoaderPath}" />
		<!-- 公用模版变量 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<!-- 前端组件处理 -->
				<entry key="componentFunc" value-ref="componentFunc" />

				<entry key="block" value-ref="block" />
				<entry key="override" value-ref="override" />
				<entry key="extends" value-ref="extends" />

				<!-- 服务路径 -->
				<entry key="servePath" value="${servePath}" />
				<!-- 静态资源服务路径 -->
				<entry key="staticServePath" value="${staticServePath}" />
				<!-- 应用版本 -->
				<entry key="appVersion" value="${appVersion}" />
				<!-- 开发模式 -->
				<entry key="debug" value="${debug}" />
				<!-- 文件服务器 -->
				<entry key="fileServePath" value="${fileServePath}" />
			</map>
		</property>
		<!-- FreeMarker属性配置 -->
		<property name="freemarkerSettings">
			<props>
				<!-- 每隔5秒检查模板是否更新，如果不经常更新模板可将更新的延迟时间设定长一点生成环境一定要设置长一点，24个小时以上吧 -->
				<prop key="template_update_delay">5</prop>
				<!-- 指定地区语言环境，我们的语言是中文 -->
				<prop key="locale">zh_CN</prop>
				<!-- 指定模板文件的编码格式 -->
				<prop key="default_encoding">UTF-8</prop>
				<!-- 指定输出编码 -->
				<prop key="output_encoding">UTF-8</prop>
				<prop key="number_format">###</prop>
			</props>
		</property>
	</bean>

	<!-- 激活Spring MVC上传组件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- FreeMarker XML 转义处理 -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- 前端组件处理 -->
	<bean id="componentFunc" class="com.yuanxin.framework.freemarker.ComponentFunc" />

	<!-- freemarker模板重写 -->
	<bean id="block"
		class="cn.org.rapid_framework.freemarker.directive.BlockDirective" />
	<bean id="override"
		class="cn.org.rapid_framework.freemarker.directive.OverrideDirective" />
	<bean id="extends"
		class="cn.org.rapid_framework.freemarker.directive.ExtendsDirective" />

	<!-- 全局捕获异常 -->
	<bean class="com.yuanxin.framework.exception.LoggingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Throwable">/error/500</prop>
			</props>
		</property>
	</bean>
</beans>